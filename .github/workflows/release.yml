on:
  push:
    tags:
    - '**'

name: Upload Generated TS files

env:
  TF_PROVIDER_VERSION: ${{ github.ref }}
  TF_PROVIDER_NAME: azuread
  TF_PROVIDER_REPO_DIR: azuread
  DOCKER_IMAGE_NAME: generation-outputs
  GO_VERSION: 1.13.4-alpine3.10

jobs:
  build:
    name: Generate files and create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v2
        with:
          path: main
      - name: Checkout tools repository
        uses: actions/checkout@v2
        with:
          path: tools
          repository: '${{ github.repository_owner }}/stellevo-tf-provider'
      - name: Copy provider-specific code to tools
        run: cp main/generation/*.go tools/generation && ls -al tools/generation
      - name: Build Docker image that will contain release artifacts
        run: |
          docker build \
            --build-arg "GO_VERSION=${GO_VERSION}" \
            --build-arg "TF_PROVIDER_VERSION=${TF_PROVIDER_VERSION##*/}" \
            --build-arg "TF_PROVIDER_NAME=${TF_PROVIDER_NAME}" \
            --build-arg "TF_PROVIDER_REPO_DIR=${TF_PROVIDER_REPO_DIR}" \
            --tag ${DOCKER_IMAGE_NAME} \
            --file "tools/Dockerfile" \
            tools
      - name: Copy the outputs out from created Docker image
        run: docker run --rm --entrypoint sh -v "$(pwd)/outputs/:/target/:rw" ${DOCKER_IMAGE_NAME} -c 'cp -r /outputs/. /target/' && zip -r provider.zip outputs
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./provider.zip
          asset_name: provider.zip
          asset_content_type: application/zip